{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project Share\\\\project-share\\\\src\\\\Pages\\\\Authentication\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\n\nconst SignUp = props => {\n  const [handle, setHandle] = useState('');\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [errors, setErrors] = useState('');\n\n  const submit = () => {\n    fetch(proxyUrl + url + 'signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: pass,\n        confirmPassword: confirm,\n        userHandle: handle\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.idToken) {\n        console.log(data.idToken);\n      } // handle\n      else if (data.handle) {\n          setErrors(data.handle);\n          console.log(data.handle);\n        } // error\n        else if (data.error) {\n            errors = /*#__PURE__*/React.createElement(\"h1\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 25\n              }\n            }, data[data.error]);\n            console.log(data.error);\n          } // confirmPassword\n          else if (data.confirmPassword) {\n              errors = /*#__PURE__*/React.createElement(\"h1\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 25\n                }\n              }, data[data.confirmPassword]);\n              console.log(data.confirmPassword);\n            }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: handle,\n    placeholder: \"User Handle\",\n    onChange: e => setHandle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    placeholder: \"Email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: pass,\n    placeholder: \"Password\",\n    onChange: e => setPass(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: confirm,\n    placeholder: \"Confirm Password\",\n    onChange: e => setConfirm(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), errors);\n};\n\nconst mapStateToProps = state => {\n  return {\n    idToken: state.idToken\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setIdToken: newToken => dispatch({\n      type: 'SET_NEW_TOKEN',\n      token: newToken\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project Share/project-share/src/Pages/Authentication/SignUp.js"],"names":["React","useState","connect","proxyUrl","url","SignUp","props","handle","setHandle","email","setEmail","pass","setPass","confirm","setConfirm","errors","setErrors","submit","fetch","method","headers","body","JSON","stringify","password","confirmPassword","userHandle","then","res","json","data","idToken","console","log","error","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","setIdToken","newToken","type","token"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\r\n\r\nconst SignUp = (props) => {\r\n    const [handle, setHandle] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [confirm, setConfirm] = useState('');\r\n    const [errors, setErrors] = useState('');\r\n\r\n    const submit = () => {\r\n        fetch(proxyUrl + url + 'signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: pass,\r\n                confirmPassword: confirm,\r\n                userHandle: handle\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.idToken) {\r\n                    console.log(data.idToken);\r\n                }\r\n                // handle\r\n                else if(data.handle) {\r\n                    setErrors(data.handle);\r\n                    console.log(data.handle);\r\n                }\r\n                // error\r\n                else if(data.error) {\r\n                    errors = (\r\n                        <h1>{data[data.error]}</h1>\r\n                    )\r\n                    console.log(data.error);\r\n                }\r\n                // confirmPassword\r\n                else if(data.confirmPassword) {\r\n                    errors = (\r\n                        <h1>{data[data.confirmPassword]}</h1>\r\n                    )\r\n                    console.log(data.confirmPassword);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={handle} placeholder=\"User Handle\" onChange={e => setHandle(e.target.value)} />\r\n            <input value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} />\r\n            <input value={pass} placeholder=\"Password\" onChange={e => setPass(e.target.value)} />\r\n            <input value={confirm} placeholder=\"Confirm Password\" onChange={e => setConfirm(e.target.value)} />\r\n            <button onClick={submit}>Sign Up</button>\r\n            {errors}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idToken: state.idToken\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIdToken: (newToken) => dispatch({type: 'SET_NEW_TOKEN', token: newToken})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}