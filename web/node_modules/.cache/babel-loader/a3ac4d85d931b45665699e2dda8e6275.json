{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\web\\\\src\\\\Pages\\\\User Page\\\\Messages.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Fetch } from '../../Tools';\nimport List from './List';\n\nconst Messages = props => {\n  const [messages, setMessages] = useState(null);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const scoped = async () => {\n      const res = await Fetch(`\n                {\n                    getMessages(userId: ${props.id}) {\n                        id\n                        author\n                        body\n                    }\n                } \n            `);\n\n      if (res) {\n        setMessages(res.getMessages);\n      } else {\n        alert('Error getting messages');\n      }\n    };\n\n    scoped();\n  }, []);\n\n  const send = () => {\n    const scoped = async () => {\n      const token = sessionStorage.getItem('token');\n      const res = await Fetch(`\n                mutation {\n                    createMessage(token: \"${token}\", body=\"${message}\", userId: \"${props.id}\") {\n                        id\n                    }\n                } \n            `);\n      console.log(res.createMessage);\n    };\n\n    if (message) {\n      scoped();\n    }\n  };\n\n  const handleKeys = e => {\n    console.log(e.key);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, messages ? messages.map(m => /*#__PURE__*/React.createElement(List, {\n    author: m.author,\n    body: m.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 44\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 88\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Message to User\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Send\"));\n};\n\nexport default Messages;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/web/src/Pages/User Page/Messages.js"],"names":["React","useEffect","useState","Fetch","List","Messages","props","messages","setMessages","message","setMessage","scoped","res","id","getMessages","alert","send","token","sessionStorage","getItem","console","log","createMessage","handleKeys","e","key","map","m","author","body","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,MAAM,GAAG,YAAY;AACvB,YAAMC,GAAG,GAAG,MAAMT,KAAK,CAAE;;0CAEKG,KAAK,CAACO,EAAG;;;;;;aAFhB,CAAvB;;AASA,UAAGD,GAAH,EAAQ;AACJJ,QAAAA,WAAW,CAACI,GAAG,CAACE,WAAL,CAAX;AACH,OAFD,MAEO;AACHC,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACH;AACJ,KAfD;;AAiBAJ,IAAAA,MAAM;AACT,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,QAAMK,IAAI,GAAG,MAAM;AACf,UAAML,MAAM,GAAG,YAAY;AACvB,YAAMM,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd;AACA,YAAMP,GAAG,GAAG,MAAMT,KAAK,CAAE;;4CAEOc,KAAM,YAAWR,OAAQ,eAAcH,KAAK,CAACO,EAAG;;;;aAFzD,CAAvB;AAOAO,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACU,aAAhB;AACH,KAVD;;AAYA,QAAGb,OAAH,EAAY;AACRE,MAAAA,MAAM;AACT;AACJ,GAhBD;;AAkBA,QAAMY,UAAU,GAAIC,CAAD,IAAO;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACC,GAAd;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMlB,QAAQ,GAAGA,QAAQ,CAACmB,GAAT,CAAaC,CAAC,iBAAI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEA,CAAC,CAACC,MAAhB;AAAwB,IAAA,IAAI,EAAED,CAAC,CAACE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAAH,gBAAiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD/E,eAEI;AACI,IAAA,WAAW,EAAC,iBADhB;AAEI,IAAA,KAAK,EAAEpB,OAFX;AAGI,IAAA,QAAQ,EAAEe,CAAC,IAAId,UAAU,CAACc,CAAC,CAACM,MAAF,CAASC,KAAV,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAOI;AAAQ,IAAA,OAAO,EAAEf,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADJ;AAWH,CA1DD;;AA4DA,eAAeX,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Fetch } from '../../Tools';\r\nimport List from './List';\r\n\r\nconst Messages = (props) => {\r\n    const [messages, setMessages] = useState(null);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const scoped = async () => {\r\n            const res = await Fetch(`\r\n                {\r\n                    getMessages(userId: ${props.id}) {\r\n                        id\r\n                        author\r\n                        body\r\n                    }\r\n                } \r\n            `);\r\n            if(res) {\r\n                setMessages(res.getMessages);\r\n            } else {\r\n                alert('Error getting messages');\r\n            }\r\n        };\r\n\r\n        scoped();\r\n    }, [])\r\n\r\n    const send = () => {\r\n        const scoped = async () => {\r\n            const token = sessionStorage.getItem('token');\r\n            const res = await Fetch(`\r\n                mutation {\r\n                    createMessage(token: \"${token}\", body=\"${message}\", userId: \"${props.id}\") {\r\n                        id\r\n                    }\r\n                } \r\n            `);\r\n            console.log(res.createMessage);\r\n        }\r\n\r\n        if(message) {\r\n            scoped();\r\n        }\r\n    }\r\n\r\n    const handleKeys = (e) => {\r\n        console.log(e.key);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { messages ? messages.map(m => <List author={m.author} body={m.body} />) : <p>Loading...</p>}\r\n            <input \r\n                placeholder=\"Message to User\"\r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n            />\r\n            <button onClick={send}>Send</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}