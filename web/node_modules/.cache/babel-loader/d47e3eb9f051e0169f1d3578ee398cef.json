{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project Share\\\\project-share\\\\src\\\\Components\\\\Posts\\\\Posts.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Commenting from './Comments';\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\n\nconst Posts = props => {\n  const [showComment, setComments] = useState(false);\n  const [liked, setLiked] = useState(false);\n  const idToken = useSelector(state => state.idToken);\n  let comments = null;\n  let likes = parseInt(props.likes);\n  let likesButton = /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setLiked(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Likes\");\n\n  if (showComment) {\n    comments = /*#__PURE__*/React.createElement(Commenting, {\n      id: props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    });\n  }\n\n  if (liked) {\n    likes += 1;\n  }\n\n  const post = {\n    body: props.children,\n    author: props.author,\n    createdAt: props.createdAt,\n    title: props.title,\n    category: props.category,\n    likes,\n    id: props.id\n  };\n\n  const like = () => {\n    const post = {\n      body: props.children,\n      author: props.author,\n      createdAt: props.createdAt,\n      title: props.title,\n      category: props.category,\n      likes: props.likes + 1,\n      id: props.id\n    };\n    const likes = post.likes;\n    fetch(proxyUrl + url + 'likePost', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"PostmanRuntime/7.26.5\",\n        \"Accept\": \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Connection\": \"keep-alive\"\n      },\n      body: JSON.stringify(post)\n    });\n  };\n\n  if (liked) {\n    like();\n    likesButton = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setLiked(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Unlike\");\n  }\n\n  const unlike = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: props.id,\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Category: \", props.category), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Author: \", props.author), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, props.children), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-likes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, likesButton, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 54\n    }\n  }, likes)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post-comment-button\",\n    onClick: () => setComments(!showComment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Comments\"), comments);\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project Share/project-share/src/Components/Posts/Posts.js"],"names":["React","useEffect","useState","useSelector","Commenting","proxyUrl","url","Posts","props","showComment","setComments","liked","setLiked","idToken","state","comments","likes","parseInt","likesButton","id","post","body","children","author","createdAt","title","category","like","fetch","method","headers","JSON","stringify","unlike"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport Commenting from './Comments';\r\n\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\r\nconst Posts = (props) => {\r\n    const [showComment, setComments] = useState(false);\r\n    const [liked, setLiked] = useState(false);\r\n\r\n    const idToken = useSelector(state => state.idToken);\r\n\r\n    let comments = null;\r\n\r\n    let likes = parseInt(props.likes)\r\n    let likesButton = (\r\n        <button onClick={() => setLiked(true)}>Likes</button>\r\n    );\r\n\r\n    if(showComment) {\r\n        comments = (\r\n            <Commenting id={props.id} />\r\n        )\r\n    } \r\n\r\n    if(liked) {\r\n        likes += 1;\r\n    }\r\n\r\n    const post = {\r\n        body: props.children,\r\n        author: props.author,\r\n        createdAt: props.createdAt,\r\n        title: props.title,\r\n        category: props.category,\r\n        likes,\r\n        id: props.id\r\n    };\r\n\r\n    const like = () => {\r\n        const post = {\r\n            body: props.children,\r\n            author: props.author,\r\n            createdAt: props.createdAt,\r\n            title: props.title,\r\n            category: props.category,\r\n            likes: props.likes + 1,\r\n            id: props.id\r\n        };\r\n\r\n        const likes = post.likes;\r\n\r\n        fetch(proxyUrl + url + 'likePost', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n                \"Accept\": \"*/*\",\r\n                \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                \"Connection\": \"keep-alive\"\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n    }\r\n    \r\n    if(liked) {\r\n        like();\r\n        likesButton = (\r\n            <button onClick={() => setLiked(true)}>Unlike</button>\r\n        )\r\n    }\r\n\r\n    const unlike = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div key={props.id} className=\"post-content\">\r\n            <p className=\"post-title\">{ props.title }</p>\r\n            <p className=\"post-category\">Category: { props.category }</p>\r\n            <p className=\"post-author\">Author: { props.author }</p>\r\n            <p className=\"post-body\">{ props.children }</p>\r\n            <p className=\"post-likes\">{ likesButton }<span>{ likes }</span></p>\r\n            {/* Add Commenting */}\r\n            <button className=\"post-comment-button\" onClick={() => setComments(!showComment)}>Comments</button>\r\n            { comments }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}