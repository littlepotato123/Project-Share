{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\web\\\\src\\\\Pages\\\\User Page\\\\User.js\";\nimport React, { useEffect, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Loading from '../../Components/Loading/Loading';\nimport Post from '../../Components/Posts/Posts';\nimport { Fetch } from '../../Tools';\nimport Messages from './Messages';\n\nconst User = () => {\n  const [user, setUser] = useState({});\n  const [supporters, setSupporters] = useState(null);\n  const [posts, setPosts] = useState(null);\n  let [share, setShare] = useState(null);\n  let [messages, setMessages] = useState(false);\n  const [show, setShow] = useState(false);\n  const [display, setDisplay] = useState(null);\n  useEffect(() => {\n    if (show) {\n      setDisplay( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, posts ? posts.map(post => /*#__PURE__*/React.createElement(Post, {\n        title: post.title,\n        author: post.author,\n        category: post.category,\n        likes: post.likes,\n        id: post.postId,\n        createdAt: post.createdAt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }\n      }, post.body)) : null));\n    } else {\n      setDisplay(null);\n    }\n  }, [show]);\n  let message = null;\n\n  if (messages) {\n    message = /*#__PURE__*/React.createElement(Messages, {\n      id: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    });\n  } else {\n    message = null;\n  }\n\n  const [supported, setSupported] = useState(false);\n\n  const unsupport = () => {\n    setSupported(!supported);\n\n    const scoped = async () => {\n      await Fetch(`\n                mutation {\n                    unsupportUser(id:\"${user.id}\", current_supporters:${supporters})\n                }\n            `);\n      const new_supporters = supporters - 1;\n      setSupporters(new_supporters);\n    };\n\n    scoped();\n  };\n\n  const support = () => {\n    setSupported(!supported);\n\n    const scoped = async () => {\n      await Fetch(`\n                mutation {\n                    supportUser(id:\"${user.id}\", current_supporters:${supporters})\n                }\n            `);\n      const new_supporters = supporters + 1;\n      setSupporters(new_supporters);\n    };\n\n    scoped();\n  };\n\n  let supportButton = /*#__PURE__*/React.createElement(\"button\", {\n    onClick: support,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Support\");\n  const {\n    userHandle\n  } = useParams();\n  const history = useHistory();\n\n  if (supported) {\n    supportButton = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: unsupport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Unsupport\");\n  } else {\n    supportButton = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: support,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Support\");\n  }\n\n  useEffect(() => {\n    const scoped = async () => {\n      let res = await Fetch(`\n                {\n                    user(handle: \"${userHandle}\") {\n                        id\n                        supporters\n                        handle\n                        email\n                        imageUrl\n                    }\n                }\n            `);\n\n      if (res.user) {\n        setUser(res.user);\n        setSupporters(res.user.supporters);\n        setShare(`localhost:3000/user/${res.user.handle}`);\n      } else {\n        history.push('/wronguser');\n      }\n\n      res = await Fetch(`\n                {\n                    userPosts(handle: \"${userHandle}\") {\n                        id\n                        author\n                        category\n                        title\n                        body\n                        likes\n                    }\n                }\n            `);\n      setPosts(res.userPosts);\n    };\n\n    scoped();\n  }, []);\n  let userInfo = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, user ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 24\n    }\n  }, user.handle, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 27\n    }\n  }), supporters, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 26\n    }\n  }), supportButton, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: share,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"Copy Share Link\")), user.bio, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setMessages(!messages),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Messages\"), message, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"1000px\",\n    src: user.imageUrl ? user.imageUrl : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Load Posts\")) : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 26\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, user ? userInfo : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 35\n    }\n  }));\n};\n\nexport default User;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/web/src/Pages/User Page/User.js"],"names":["React","useEffect","useState","CopyToClipboard","useHistory","useParams","Loading","Post","Fetch","Messages","User","user","setUser","supporters","setSupporters","posts","setPosts","share","setShare","messages","setMessages","show","setShow","display","setDisplay","map","post","title","author","category","likes","postId","createdAt","body","message","id","supported","setSupported","unsupport","scoped","new_supporters","support","supportButton","userHandle","history","res","handle","push","userPosts","userInfo","bio","imageUrl"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from 'react-router-dom';\r\nimport Loading from '../../Components/Loading/Loading';\r\nimport Post from '../../Components/Posts/Posts';\r\nimport { Fetch } from '../../Tools';\r\nimport Messages from './Messages';\r\n\r\nconst User = () => {\r\n    const [user, setUser] = useState({});\r\n    const [supporters, setSupporters] = useState(null);\r\n    const [posts, setPosts] = useState(null);\r\n    let [share, setShare] = useState(null);\r\n    let [messages, setMessages] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [display, setDisplay] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(show) {\r\n            setDisplay((\r\n                <div>\r\n                    {\r\n                        posts ? \r\n                        posts.map(post => \r\n                            <Post\r\n                                title={post.title} \r\n                                author={post.author} \r\n                                category={post.category}\r\n                                likes={post.likes}\r\n                                id={post.postId}\r\n                                createdAt={post.createdAt}\r\n                            >\r\n                                {post.body}\r\n                            </Post>\r\n                        ) :\r\n                        null\r\n                    }\r\n                </div>\r\n            ));\r\n        } else {\r\n            setDisplay(null);\r\n        }\r\n    }, [show])\r\n\r\n\r\n    let message =  null;\r\n\r\n    if(messages) {\r\n        message = (\r\n            <Messages id={user.id} />\r\n        )\r\n    } else {\r\n        message = null;\r\n    }\r\n\r\n    const [supported, setSupported] = useState(false);\r\n\r\n    const unsupport = () => {\r\n        setSupported(!supported);\r\n        const scoped = async () => {\r\n            await Fetch(`\r\n                mutation {\r\n                    unsupportUser(id:\"${user.id}\", current_supporters:${supporters})\r\n                }\r\n            `)\r\n            const new_supporters = supporters - 1;\r\n            setSupporters(new_supporters);\r\n        }\r\n        scoped();\r\n    }\r\n\r\n    const support = () => {\r\n        setSupported(!supported);\r\n        const scoped = async () => {\r\n            await Fetch(`\r\n                mutation {\r\n                    supportUser(id:\"${user.id}\", current_supporters:${supporters})\r\n                }\r\n            `);\r\n            const new_supporters = supporters + 1;\r\n            setSupporters(new_supporters);\r\n        }\r\n        scoped();\r\n    }\r\n\r\n    let supportButton = (\r\n        <button onClick={support}>Support</button>\r\n    )\r\n\r\n    const { userHandle } = useParams();\r\n    \r\n    const history = useHistory();\r\n\r\n    if(supported) {\r\n        supportButton = (\r\n            <button onClick={unsupport}>Unsupport</button>\r\n        );\r\n    } else {\r\n        supportButton = (\r\n            <button onClick={support}>Support</button>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const scoped = async () => {\r\n            let res = await Fetch(`\r\n                {\r\n                    user(handle: \"${userHandle}\") {\r\n                        id\r\n                        supporters\r\n                        handle\r\n                        email\r\n                        imageUrl\r\n                    }\r\n                }\r\n            `);\r\n            if(res.user) {\r\n                setUser(res.user);\r\n                setSupporters(res.user.supporters)\r\n                setShare(`localhost:3000/user/${res.user.handle}`)\r\n            } else {\r\n                history.push('/wronguser')\r\n            }\r\n\r\n            res = await Fetch(`\r\n                {\r\n                    userPosts(handle: \"${userHandle}\") {\r\n                        id\r\n                        author\r\n                        category\r\n                        title\r\n                        body\r\n                        likes\r\n                    }\r\n                }\r\n            `);\r\n            setPosts(res.userPosts);\r\n        }\r\n\r\n        scoped();\r\n    }, [])\r\n\r\n    let userInfo = (\r\n        <div>\r\n            {\r\n                user ? <div>\r\n            {user.handle} <br />\r\n            {supporters} <br />\r\n            { supportButton }\r\n            <CopyToClipboard text={share}>\r\n                <button>Copy Share Link</button>\r\n            </CopyToClipboard>\r\n            {user.bio}\r\n            <button onClick={() => setMessages(!messages)}>Messages</button>\r\n            { message }\r\n            <img width=\"1000px\" src={user.imageUrl ? user.imageUrl : null} />\r\n            <button onClick={() => setShow(!show)}>Load Posts</button>\r\n                </div> : <Loading />\r\n            }\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                user ? userInfo : <Loading />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}