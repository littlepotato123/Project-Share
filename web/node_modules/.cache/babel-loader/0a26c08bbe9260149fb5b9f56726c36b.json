{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\project-share\\\\src\\\\Pages\\\\Authentication\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport { storage } from '../../Firebase/index';\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\nconst aUrl = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\n\nconst SignUp = props => {\n  const [handle, setHandle] = useState('');\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [errors, setErrors] = useState('');\n\n  const submit = () => {\n    const data = {\n      email,\n      password: pass,\n      confirmPassword: confirm,\n      userHandle: handle,\n      imageLink: url\n    };\n    fetch(proxyUrl + aUrl + 'signup', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"PostmanRuntime/7.26.5\",\n        \"Accept\": \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Connection\": \"keep-alive\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(data => {\n      if (data.idToken) {\n        sessionStorage.setItem('token', data.idToken);\n      } // handle\n      else if (data.handle) {\n          setErrors(data.handle);\n        } // error\n        else if (data.error) {\n            setErrors(data.error);\n          } // confirmPassword\n          else if (data.confirmPassword) {\n              setErrors(data.confirmPassword);\n            }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: handle,\n    placeholder: \"User Handle\",\n    onChange: e => setHandle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    placeholder: \"Email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: pass,\n    placeholder: \"Password\",\n    onChange: e => setPass(e.target.value),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: confirm,\n    placeholder: \"Confirm Password\",\n    onChange: e => setConfirm(e.target.value),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), errors);\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/project-share/src/Pages/Authentication/SignUp.js"],"names":["React","useState","storage","proxyUrl","aUrl","SignUp","props","handle","setHandle","email","setEmail","pass","setPass","confirm","setConfirm","errors","setErrors","submit","data","password","confirmPassword","userHandle","imageLink","url","fetch","method","headers","body","JSON","stringify","then","res","json","idToken","sessionStorage","setItem","error","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,IAAI,GAAG,iEAAb;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMgB,MAAM,GAAG,MAAM;AACjB,UAAMC,IAAI,GAAG;AACTT,MAAAA,KADS;AAETU,MAAAA,QAAQ,EAAER,IAFD;AAGTS,MAAAA,eAAe,EAAEP,OAHR;AAITQ,MAAAA,UAAU,EAAEd,MAJH;AAKTe,MAAAA,SAAS,EAAEC;AALF,KAAb;AAOAC,IAAAA,KAAK,CAACrB,QAAQ,GAAGC,IAAX,GAAkB,QAAnB,EAA6B;AAC9BqB,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,sBAAc,uBAFT;AAGL,kBAAU,KAHL;AAIL,2BAAmB,mBAJd;AAKL,sBAAc;AALT,OAFqB;AAS9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AATwB,KAA7B,CAAL,CAWKY,IAXL,CAWUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXjB,EAYKF,IAZL,CAYUZ,IAAI,IAAI;AACV,UAAGA,IAAI,CAACe,OAAR,EAAiB;AACbC,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCjB,IAAI,CAACe,OAArC;AACH,OAFD,CAGA;AAHA,WAIK,IAAGf,IAAI,CAACX,MAAR,EAAgB;AACjBS,UAAAA,SAAS,CAACE,IAAI,CAACX,MAAN,CAAT;AACH,SAFI,CAGL;AAHK,aAIA,IAAGW,IAAI,CAACkB,KAAR,EAAe;AAChBpB,YAAAA,SAAS,CAACE,IAAI,CAACkB,KAAN,CAAT;AACH,WAFI,CAGL;AAHK,eAIA,IAAGlB,IAAI,CAACE,eAAR,EAAyB;AAC1BJ,cAAAA,SAAS,CAACE,IAAI,CAACE,eAAN,CAAT;AACH;AACJ,KA5BL;AA6BH,GArCD;;AAuCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEb,MAAd;AAAsB,IAAA,WAAW,EAAC,aAAlC;AAAgD,IAAA,QAAQ,EAAE8B,CAAC,IAAI7B,SAAS,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,KAAK,EAAE9B,KAAd;AAAqB,IAAA,WAAW,EAAC,OAAjC;AAAyC,IAAA,QAAQ,EAAE4B,CAAC,IAAI3B,QAAQ,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAO,IAAA,KAAK,EAAE5B,IAAd;AAAoB,IAAA,WAAW,EAAC,UAAhC;AAA2C,IAAA,QAAQ,EAAE0B,CAAC,IAAIzB,OAAO,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjE;AAAmF,IAAA,IAAI,EAAC,UAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAO,IAAA,KAAK,EAAE1B,OAAd;AAAuB,IAAA,WAAW,EAAC,kBAAnC;AAAsD,IAAA,QAAQ,EAAEwB,CAAC,IAAIvB,UAAU,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/E;AAAiG,IAAA,IAAI,EAAC,UAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAQ,IAAA,OAAO,EAAEtB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMKF,MANL,CADJ;AAUH,CAxDD;;AA0DA,eAAeV,MAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { storage } from '../../Firebase/index';\r\n\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst aUrl = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\r\n\r\nconst SignUp = (props) => {\r\n    const [handle, setHandle] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [confirm, setConfirm] = useState('');\r\n    const [errors, setErrors] = useState('');\r\n\r\n    const submit = () => {\r\n        const data = {\r\n            email,\r\n            password: pass,\r\n            confirmPassword: confirm,\r\n            userHandle: handle,\r\n            imageLink: url\r\n        };\r\n        fetch(proxyUrl + aUrl + 'signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n                \"Accept\": \"*/*\",\r\n                \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                \"Connection\": \"keep-alive\",\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.idToken) {\r\n                    sessionStorage.setItem('token', data.idToken);\r\n                }\r\n                // handle\r\n                else if(data.handle) {\r\n                    setErrors(data.handle);\r\n                }\r\n                // error\r\n                else if(data.error) {\r\n                    setErrors(data.error);\r\n                }\r\n                // confirmPassword\r\n                else if(data.confirmPassword) {\r\n                    setErrors(data.confirmPassword);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={handle} placeholder=\"User Handle\" onChange={e => setHandle(e.target.value)} />\r\n            <input value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} />\r\n            <input value={pass} placeholder=\"Password\" onChange={e => setPass(e.target.value)} type=\"password\" />\r\n            <input value={confirm} placeholder=\"Confirm Password\" onChange={e => setConfirm(e.target.value)} type=\"password\" />\r\n            <button onClick={submit}>Sign Up</button>\r\n            {errors}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}