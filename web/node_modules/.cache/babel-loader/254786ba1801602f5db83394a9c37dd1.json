{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\web\\\\src\\\\Pages\\\\User Page\\\\User.js\";\nimport React, { useEffect, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Loading from '../../Components/Loading/Loading';\nimport Post from '../../Components/Posts/Posts';\nimport { Fetch } from '../../Tools';\n\nconst User = () => {\n  const [user, setUser] = useState({});\n  const [supporters, setSupporters] = useState(null);\n  const [posts, setPosts] = useState(null);\n  let [share, setShare] = useState(null);\n  const [supported, setSupported] = useState(false);\n\n  const unsupport = () => {\n    setSupported(!supported); // fetch(proxyUrl + url + 'unfollowUser', {\n    //     method: 'POST',\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"User-Agent\": \"PostmanRuntime/7.26.5\",\n    //         \"Accept\": \"*/*\",\n    //         \"Accept-Encoding\": \"gzip, deflate, br\",\n    //         \"Connection\": \"keep-alive\"\n    //     },\n    //     body: JSON.stringify({\n    //         supporters: supporters,\n    //         handle: user.handle,\n    //         email: user.email,\n    //         userId: user.userId,\n    //         id: user.userId\n    //     })\n    // })\n    // .then(() => {\n    //     setSupporters(supporters - 1);\n    // })\n  };\n\n  const support = () => {\n    setSupported(!supported);\n\n    const scoped = async () => {\n      await Fetch(`\n                mutation {\n                    supportUser(id:\"${user.id}\", current_supporters:${supporters})\n                }\n            `);\n    };\n\n    setSupporters(supporters += 1);\n    scoped();\n  };\n\n  let supportButton = /*#__PURE__*/React.createElement(\"button\", {\n    onClick: support,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Support\");\n  const {\n    userHandle\n  } = useParams();\n  const history = useHistory();\n\n  if (supported) {\n    supportButton = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: unsupport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Unsupport\");\n  } else {\n    supportButton = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: support,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Support\");\n  }\n\n  useEffect(() => {\n    const scoped = async () => {\n      const res = await Fetch(`\n                {\n                    user(handle: \"${userHandle}\") {\n                        id\n                        supporters\n                        handle\n                        email\n                        imageUrl\n                    }\n                }\n            `);\n\n      if (res.user) {\n        setUser(res.user);\n        setSupporters(res.user.supporters);\n        setShare(`localhost:3000/user/${res.user.handle}`);\n      } else {\n        history.push('/wronguser');\n      }\n    };\n\n    scoped();\n  }, []);\n\n  const loadPost = () => {\n    const scoped = async () => {\n      console.log(user.handle);\n      const res = await Fetch(`\n                {\n                    userPosts(handle:\"${user.handle}\"){\n                        id\n                        title\n                        category\n                        likes\n                        body\n                        author\n                    }\n                }\n            `);\n      setPosts(res.userPosts);\n    };\n\n    scoped();\n  };\n\n  let userInfo = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, user ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 24\n    }\n  }, user.handle, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 27\n    }\n  }), supporters, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 26\n    }\n  }), supportButton, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: share,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Copy Share Link\")), user.bio, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"1000px\",\n    src: user.imageUrl ? user.imageUrl : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: loadPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Load Posts\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, posts ? posts.map(post => /*#__PURE__*/React.createElement(Post, {\n    title: post.title,\n    author: post.author,\n    category: post.category,\n    likes: post.likes,\n    id: post.postId,\n    createdAt: post.createdAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, post.body)) : null)) : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 26\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, user ? userInfo : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 35\n    }\n  }));\n};\n\nexport default User;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/web/src/Pages/User Page/User.js"],"names":["React","useEffect","useState","CopyToClipboard","useHistory","useParams","Loading","Post","Fetch","User","user","setUser","supporters","setSupporters","posts","setPosts","share","setShare","supported","setSupported","unsupport","support","scoped","id","supportButton","userHandle","history","res","handle","push","loadPost","console","log","userPosts","userInfo","bio","imageUrl","map","post","title","author","category","likes","postId","createdAt","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from 'react-router-dom';\r\nimport Loading from '../../Components/Loading/Loading';\r\nimport Post from '../../Components/Posts/Posts';\r\nimport { Fetch } from '../../Tools';\r\n\r\nconst User = () => {\r\n    const [user, setUser] = useState({});\r\n    const [supporters, setSupporters] = useState(null);\r\n    const [posts, setPosts] = useState(null);\r\n    let [share, setShare] = useState(null);\r\n\r\n    const [supported, setSupported] = useState(false);\r\n\r\n    const unsupport = () => {\r\n        setSupported(!supported);\r\n        // fetch(proxyUrl + url + 'unfollowUser', {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n        //         \"Accept\": \"*/*\",\r\n        //         \"Accept-Encoding\": \"gzip, deflate, br\",\r\n        //         \"Connection\": \"keep-alive\"\r\n        //     },\r\n        //     body: JSON.stringify({\r\n        //         supporters: supporters,\r\n        //         handle: user.handle,\r\n        //         email: user.email,\r\n        //         userId: user.userId,\r\n        //         id: user.userId\r\n        //     })\r\n        // })\r\n        // .then(() => {\r\n        //     setSupporters(supporters - 1);\r\n        // })\r\n    }\r\n\r\n    const support = () => {\r\n        setSupported(!supported);\r\n        const scoped = async () => {\r\n            await Fetch(`\r\n                mutation {\r\n                    supportUser(id:\"${user.id}\", current_supporters:${supporters})\r\n                }\r\n            `);\r\n        }\r\n        setSupporters(supporters += 1);\r\n        scoped();\r\n    }\r\n\r\n    let supportButton = (\r\n        <button onClick={support}>Support</button>\r\n    )\r\n\r\n    const { userHandle } = useParams();\r\n    \r\n    const history = useHistory();\r\n\r\n    if(supported) {\r\n        supportButton = (\r\n            <button onClick={unsupport}>Unsupport</button>\r\n        );\r\n    } else {\r\n        supportButton = (\r\n            <button onClick={support}>Support</button>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const scoped = async () => {\r\n            const res = await Fetch(`\r\n                {\r\n                    user(handle: \"${userHandle}\") {\r\n                        id\r\n                        supporters\r\n                        handle\r\n                        email\r\n                        imageUrl\r\n                    }\r\n                }\r\n            `);\r\n            if(res.user) {\r\n                setUser(res.user);\r\n                setSupporters(res.user.supporters)\r\n                setShare(`localhost:3000/user/${res.user.handle}`)\r\n            } else {\r\n                history.push('/wronguser')\r\n            }\r\n        }\r\n\r\n        scoped();\r\n    }, [])\r\n\r\n    const loadPost = () => {\r\n        const scoped = async () => {\r\n            console.log(user.handle);\r\n            const res = await Fetch(`\r\n                {\r\n                    userPosts(handle:\"${user.handle}\"){\r\n                        id\r\n                        title\r\n                        category\r\n                        likes\r\n                        body\r\n                        author\r\n                    }\r\n                }\r\n            `);\r\n            setPosts(res.userPosts);\r\n        }\r\n        scoped();\r\n    }\r\n\r\n    let userInfo = (\r\n        <div>\r\n            {\r\n                user ? <div>\r\n            {user.handle} <br />\r\n            {supporters} <br />\r\n            { supportButton }\r\n            <CopyToClipboard text={share}>\r\n                <button>Copy Share Link</button>\r\n            </CopyToClipboard>\r\n            {user.bio}\r\n            <img width=\"1000px\" src={user.imageUrl ? user.imageUrl : null} />\r\n            <button onClick={loadPost}>Load Posts</button>\r\n            <div>\r\n                {\r\n                    posts ? \r\n                    posts.map(post => \r\n                        <Post\r\n                            title={post.title} \r\n                            author={post.author} \r\n                            category={post.category}\r\n                            likes={post.likes}\r\n                            id={post.postId}\r\n                            createdAt={post.createdAt}\r\n                        >\r\n                            {post.body}\r\n                        </Post>\r\n                    ) :\r\n                    null\r\n                }\r\n            </div>\r\n                </div> : <Loading />\r\n            }\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                user ? userInfo : <Loading />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}