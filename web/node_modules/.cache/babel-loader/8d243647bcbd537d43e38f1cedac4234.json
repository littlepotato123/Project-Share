{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\web\\\\src\\\\Pages\\\\New Post\\\\NewPost.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Fetch } from '../../Tools';\n\nconst NewPost = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [category, setCategory] = useState('');\n  const [categories, setCategories] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    const scoped = async () => {\n      const res = await Fetch(`\n                {\n                    getCategories {\n                        title\n                    }\n                }\n            `);\n      setCategories(res.getCategories);\n    };\n\n    scoped();\n  }, []);\n\n  const post = () => {\n    const scoped = async () => {\n      const token = sessionStorage.getItem('token');\n      const res = await Fetch(`\n                mutation {\n                    newPost(token: \"${token}\", title: \"${title}\", body: \"${body}\", category: \"${category}\") {\n                        id\n                    }\n                } \n            `);\n\n      if (res.newPost) {\n        history.push('/');\n      } else {\n        alert('Error while posting');\n      }\n    };\n\n    if (title && body && category) {\n      if (category.includes('@') || category.includes('/') || category.includes('?') || category.includes('#') || category.includes('$')) {\n        alert('Wierd Characters in Category');\n      } else {\n        scoped();\n      }\n    } else {\n      alert('Some fields are empty');\n    }\n  };\n\n  const handleKey = e => {\n    if (e.key == \"Enter\") {\n      post();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Title of Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    placeholder: \"Category of Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: body,\n    onChange: e => setBody(e.target.value),\n    placeholder: \"Post Body\",\n    onKeyDown: handleKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Post\"));\n};\n\nexport default NewPost;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/web/src/Pages/New Post/NewPost.js"],"names":["React","useEffect","useState","useHistory","Fetch","NewPost","title","setTitle","body","setBody","category","setCategory","categories","setCategories","history","scoped","res","getCategories","post","token","sessionStorage","getItem","newPost","push","alert","includes","handleKey","e","key","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    useHistory\r\n} from 'react-router-dom';\r\nimport { Fetch } from '../../Tools';\r\n\r\nconst NewPost = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [categories, setCategories] = useState(null);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const scoped = async () => {\r\n            const res = await Fetch(`\r\n                {\r\n                    getCategories {\r\n                        title\r\n                    }\r\n                }\r\n            `);\r\n            setCategories(res.getCategories);\r\n        };\r\n        scoped();\r\n    }, [])\r\n\r\n    const post = () => {\r\n        const scoped = async () => {\r\n            const token = sessionStorage.getItem('token');\r\n            const res = await Fetch(`\r\n                mutation {\r\n                    newPost(token: \"${token}\", title: \"${title}\", body: \"${body}\", category: \"${category}\") {\r\n                        id\r\n                    }\r\n                } \r\n            `);\r\n            if(res.newPost) {\r\n                history.push('/');\r\n            } else {\r\n                alert('Error while posting');\r\n            }\r\n        } \r\n\r\n        if(title && body && category) {\r\n            if(category.includes('@') || category.includes('/') || category.includes('?') || category.includes('#') || category.includes('$')) {\r\n                alert('Wierd Characters in Category');\r\n            } else {\r\n                scoped();\r\n            }\r\n        } else {\r\n            alert('Some fields are empty');\r\n        }\r\n    }\r\n\r\n    const handleKey = (e) => {\r\n        if(e.key == \"Enter\") {\r\n            post();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={title} onChange={e => setTitle(e.target.value)} placeholder=\"Title of Post\" />\r\n            <input value={category} onChange={e => setCategory(e.target.value)} placeholder=\"Category of Post\" />\r\n            <textarea value={body} onChange={e => setBody(e.target.value)} placeholder=\"Post Body\" onKeyDown={handleKey}></textarea>\r\n            <button onClick={post}>Post</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}