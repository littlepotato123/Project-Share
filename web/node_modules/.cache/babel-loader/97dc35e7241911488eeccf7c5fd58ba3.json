{"ast":null,"code":"var _jsxFileName = \"C:\\\\Akshat\\\\LearningProgramming\\\\React\\\\Projects\\\\Project-Share\\\\web\\\\src\\\\Components\\\\Posts\\\\Comments.js\";\nimport React, { useEffect, useState } from 'react';\nconst Commenting = React.memo(props => {\n  const [postData, setPost] = useState({\n    id: props.id\n  });\n  const [comments, setComments] = useState(null);\n  const [comment, setComment] = useState('');\n  const [display, setDisplay] = useState(null);\n  const [but, setBut] = useState(null);\n\n  const changeBut = () => {\n    setBut(null);\n  };\n\n  const idToken = sessionStorage.getItem('token');\n\n  let loadAll = () => {\n    changeBut();\n  };\n\n  useEffect(() => {}, []);\n\n  const post = () => {\n    if (idToken == null | undefined) {\n      alert('Not Logged In');\n    } else {}\n  };\n\n  const handleChange = e => {\n    if (e.key == \"Enter\") {\n      post();\n    }\n  };\n\n  let input = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    onKeyPress: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Comment\"));\n\n  if (idToken == null) {\n    input = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      disabled: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Comment\"));\n  }\n\n  let posting = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, input);\n\n  if (comments == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, posting);\n  } else if (comments.error === \"Could not find post\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Could not find any comments, Be the first to comment!\"), posting);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, display, but, posting);\n});\nexport default Commenting;","map":{"version":3,"sources":["C:/Akshat/LearningProgramming/React/Projects/Project-Share/web/src/Components/Posts/Comments.js"],"names":["React","useEffect","useState","Commenting","memo","props","postData","setPost","id","comments","setComments","comment","setComment","display","setDisplay","but","setBut","changeBut","idToken","sessionStorage","getItem","loadAll","post","undefined","alert","handleChange","e","key","input","target","value","posting","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,MAAMC,UAAU,GAAGH,KAAK,CAACI,IAAN,CAAYC,KAAD,IAAW;AACrC,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBL,QAAQ,CAAC;AACjCM,IAAAA,EAAE,EAAEH,KAAK,CAACG;AADuB,GAAD,CAApC;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,IAAD,CAA9B;;AAEA,QAAMe,SAAS,GAAG,MAAM;AACpBD,IAAAA,MAAM,CAAC,IAAD,CAAN;AACH,GAFD;;AAIA,QAAME,OAAO,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAhB;;AAEA,MAAIC,OAAO,GAAG,MAAM;AAChBJ,IAAAA,SAAS;AACZ,GAFD;;AAIAhB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMqB,IAAI,GAAG,MAAM;AACf,QAAGJ,OAAO,IAAI,IAAX,GAAkBK,SAArB,EAAgC;AAC5BC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH,KAFD,MAEO,CACN;AACJ,GALD;;AAOA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAGA,CAAC,CAACC,GAAF,IAAS,OAAZ,EAAqB;AACjBL,MAAAA,IAAI;AACP;AACJ,GAJD;;AAMA,MAAIM,KAAK,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAEjB,OADX;AAEI,IAAA,QAAQ,EAAEe,CAAC,IAAId,UAAU,CAACc,CAAC,CAACG,MAAF,CAASC,KAAV,CAF7B;AAGI,IAAA,UAAU,EAAEL,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,OAAO,EAAEH,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CADJ;;AAWA,MAAGJ,OAAO,IAAI,IAAd,EAAoB;AAChBU,IAAAA,KAAK,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,QAAQ,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,QAAQ,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ;AAMH;;AAED,MAAIG,OAAO,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMH,KADN,CADJ;;AAMA,MAAGnB,QAAQ,IAAI,IAAf,EAAqB;AACjB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMsB,OADN,CADJ;AAKH,GAND,MAMO,IAAGtB,QAAQ,CAACuB,KAAT,KAAmB,qBAAtB,EAA6C;AAChD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADJ,EAEMD,OAFN,CADJ;AAMH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMlB,OADN,EAEME,GAFN,EAGMgB,OAHN,CADJ;AAOH,CArFkB,CAAnB;AAuFA,eAAe5B,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Commenting = React.memo((props) => {\r\n    const [postData, setPost] = useState({\r\n        id: props.id,\r\n    })\r\n    const [comments, setComments] = useState(null);\r\n    const [comment, setComment] = useState('');\r\n    const [display, setDisplay] = useState(null);\r\n    const [but, setBut] = useState(null);\r\n\r\n    const changeBut = () => {\r\n        setBut(null);\r\n    }\r\n\r\n    const idToken = sessionStorage.getItem('token');\r\n\r\n    let loadAll = () => {\r\n        changeBut();\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n    const post = () => {\r\n        if(idToken == null | undefined) {\r\n            alert('Not Logged In')\r\n        } else {\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if(e.key == \"Enter\") {\r\n            post();\r\n        }\r\n    }\r\n\r\n    let input = (\r\n        <div>\r\n            <input \r\n                value={comment}\r\n                onChange={e => setComment(e.target.value)}\r\n                onKeyPress={handleChange}\r\n            />\r\n            <button onClick={post}>Comment</button>\r\n        </div>\r\n    );\r\n\r\n    if(idToken == null) {\r\n        input = (\r\n            <div>\r\n                <input disabled=\"true\" />\r\n                <button disabled=\"true\">Comment</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let posting = (\r\n        <div>\r\n            { input }\r\n        </div>\r\n    )\r\n\r\n    if(comments == null) {\r\n        return (\r\n            <div>\r\n                { posting }\r\n            </div>\r\n        )\r\n    } else if(comments.error === \"Could not find post\") {\r\n        return (\r\n            <div>\r\n                <h1>Could not find any comments, Be the first to comment!</h1>\r\n                { posting }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { display }\r\n            { but }\r\n            { posting }\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Commenting;"]},"metadata":{},"sourceType":"module"}