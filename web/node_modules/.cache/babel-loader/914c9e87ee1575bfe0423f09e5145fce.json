{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\web\\\\src\\\\Components\\\\Posts\\\\Comments.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Fetch } from '../../Tools';\n\nconst Commenting = props => {\n  const [comments, setComments] = useState(null);\n  useEffect(() => {\n    const scoped = async () => {\n      const res = await Fetch(`\n                {\n                    getComments(id:\"${props.id}\") {\n                        id\n                        body\n                        author\n                    }\n                } \n            `);\n      setComments(res.getComments);\n    };\n\n    scoped();\n  }, []);\n\n  if (comments) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, comments.map(c => /*#__PURE__*/React.createElement(Commenting, {\n      id: c.id,\n      author: c.author,\n      body: c.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 39\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Could not find any comments\");\n  }\n};\n\nexport default Commenting;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/web/src/Components/Posts/Comments.js"],"names":["React","useEffect","useState","Fetch","Commenting","props","comments","setComments","scoped","res","id","getComments","map","c","author","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,aAAtB;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,MAAM,GAAG,YAAY;AACvB,YAAMC,GAAG,GAAG,MAAMN,KAAK,CAAE;;sCAECE,KAAK,CAACK,EAAG;;;;;;aAFZ,CAAvB;AASAH,MAAAA,WAAW,CAACE,GAAG,CAACE,WAAL,CAAX;AACH,KAXD;;AAaAH,IAAAA,MAAM;AACT,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAGF,QAAH,EAAa;AACT,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQA,QAAQ,CAACM,GAAT,CAAaC,CAAC,iBAAI,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAEA,CAAC,CAACH,EAAlB;AAAsB,MAAA,MAAM,EAAEG,CAAC,CAACC,MAAhC;AAAwC,MAAA,IAAI,EAAED,CAAC,CAACE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,CAFR,CADJ;AAOH,GARD,MAQO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ;AAKH;AAEJ,CApCD;;AAsCA,eAAeX,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Fetch } from '../../Tools';\r\n\r\n\r\nconst Commenting = (props) => {\r\n    const [comments, setComments] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const scoped = async () => {\r\n            const res = await Fetch(`\r\n                {\r\n                    getComments(id:\"${props.id}\") {\r\n                        id\r\n                        body\r\n                        author\r\n                    }\r\n                } \r\n            `);\r\n            setComments(res.getComments);\r\n        }\r\n\r\n        scoped();\r\n    }, [])\r\n\r\n    if(comments) {\r\n        return (\r\n            <div>\r\n                {\r\n                    comments.map(c => <Commenting id={c.id} author={c.author} body={c.body} />)\r\n                }\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                Could not find any comments\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default Commenting;"]},"metadata":{},"sourceType":"module"}