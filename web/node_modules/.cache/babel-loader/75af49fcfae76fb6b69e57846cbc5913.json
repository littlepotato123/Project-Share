{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\web\\\\src\\\\Pages\\\\New Post\\\\NewPost.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Fetch } from '../../Tools';\n\nconst NewPost = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [category, setCategory] = useState('');\n  const history = useHistory();\n\n  const post = () => {\n    const scoped = async () => {\n      const token = sessionStorage.getItem('token');\n      const res = await Fetch(`\n                mutation {\n                    newPost(token: \"${token}\", title: \"${title}\", body: \"${body}\", category: \"${category}\") {\n                        id\n                    }\n                } \n            `);\n\n      if (res.newPost) {\n        history.push('/');\n      } else {\n        alert('Error while posting');\n      }\n    };\n\n    if (title && body && category) {\n      scoped();\n    } else {\n      alert('Some fields are empty');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Title of Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: body,\n    onChange: e => setBody(e.target.value),\n    placeholder: \"Post Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    placeholder: \"Category of Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Post\"));\n};\n\nexport default NewPost;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/web/src/Pages/New Post/NewPost.js"],"names":["React","useState","useHistory","Fetch","NewPost","title","setTitle","body","setBody","category","setCategory","history","post","scoped","token","sessionStorage","getItem","res","newPost","push","alert","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,UADJ,QAEO,kBAFP;AAGA,SAASC,KAAT,QAAsB,aAAtB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;;AAEA,QAAMU,IAAI,GAAG,MAAM;AACf,UAAMC,MAAM,GAAG,YAAY;AACvB,YAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd;AACA,YAAMC,GAAG,GAAG,MAAMd,KAAK,CAAE;;sCAECW,KAAM,cAAaT,KAAM,aAAYE,IAAK,iBAAgBE,QAAS;;;;aAFtE,CAAvB;;AAOA,UAAGQ,GAAG,CAACC,OAAP,EAAgB;AACZP,QAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACH,OAFD,MAEO;AACHC,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACH;AACJ,KAdD;;AAgBA,QAAGf,KAAK,IAAIE,IAAT,IAAiBE,QAApB,EAA8B;AAC1BI,MAAAA,MAAM;AACT,KAFD,MAEO;AACHO,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACH;AACJ,GAtBD;;AAwBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEf,KAAd;AAAqB,IAAA,QAAQ,EAAEgB,CAAC,IAAIf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5C;AAA8D,IAAA,WAAW,EAAC,eAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,KAAK,EAAEhB,IAAd;AAAoB,IAAA,QAAQ,EAAEc,CAAC,IAAIb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1C;AAA4D,IAAA,WAAW,EAAC,cAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAO,IAAA,KAAK,EAAEd,QAAd;AAAwB,IAAA,QAAQ,EAAEY,CAAC,IAAIX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlD;AAAoE,IAAA,WAAW,EAAC,kBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAQ,IAAA,OAAO,EAAEX,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CADJ;AAQH,CAvCD;;AAyCA,eAAeR,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    useHistory\r\n} from 'react-router-dom';\r\nimport { Fetch } from '../../Tools';\r\n\r\nconst NewPost = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [category, setCategory] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const post = () => {\r\n        const scoped = async () => {\r\n            const token = sessionStorage.getItem('token');\r\n            const res = await Fetch(`\r\n                mutation {\r\n                    newPost(token: \"${token}\", title: \"${title}\", body: \"${body}\", category: \"${category}\") {\r\n                        id\r\n                    }\r\n                } \r\n            `);\r\n            if(res.newPost) {\r\n                history.push('/');\r\n            } else {\r\n                alert('Error while posting');\r\n            }\r\n        } \r\n\r\n        if(title && body && category) {\r\n            scoped();\r\n        } else {\r\n            alert('Some fields are empty');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={title} onChange={e => setTitle(e.target.value)} placeholder=\"Title of Post\" />\r\n            <input value={body} onChange={e => setBody(e.target.value)} placeholder=\"Post Content\" />\r\n            <input value={category} onChange={e => setCategory(e.target.value)} placeholder=\"Category of Post\" />\r\n            <button onClick={post}>Post</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}