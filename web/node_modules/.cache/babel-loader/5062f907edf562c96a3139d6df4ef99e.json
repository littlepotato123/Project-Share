{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\project-share\\\\src\\\\Pages\\\\Authentication\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport { storage } from '../../Firebase/index';\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\nconst aUrl = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\n\nconst SignUp = props => {\n  const [handle, setHandle] = useState('');\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [errors, setErrors] = useState('');\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState('');\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n    }, () => {\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        setUrl(url);\n      });\n    });\n  };\n\n  const submit = () => {\n    const data = {\n      email,\n      password: pass,\n      confirmPassword: confirm,\n      userHandle: handle,\n      imageLink: url\n    };\n    console.log(data);\n    fetch(proxyUrl + aUrl + 'signup', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"PostmanRuntime/7.26.5\",\n        \"Accept\": \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Connection\": \"keep-alive\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(data => {\n      if (data.idToken) {\n        sessionStorage.setItem('token', data.idToken);\n      } // handle\n      else if (data.handle) {\n          setErrors(data.handle);\n        } // error\n        else if (data.error) {\n            setErrors(data.error);\n          } // confirmPassword\n          else if (data.confirmPassword) {\n              setErrors(data.confirmPassword);\n            }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: handle,\n    placeholder: \"User Handle\",\n    onChange: e => setHandle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    placeholder: \"Email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: pass,\n    placeholder: \"Password\",\n    onChange: e => setPass(e.target.value),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: confirm,\n    placeholder: \"Confirm Password\",\n    onChange: e => setConfirm(e.target.value),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"progress\", {\n    value: progress,\n    max: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), url, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: url || \"http://via.placeholder.com/300\",\n    alt: \"firebase-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), errors);\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/project-share/src/Pages/Authentication/SignUp.js"],"names":["React","useState","storage","proxyUrl","aUrl","SignUp","props","handle","setHandle","email","setEmail","pass","setPass","confirm","setConfirm","errors","setErrors","image","setImage","url","setUrl","progress","setProgress","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","submit","data","password","confirmPassword","userHandle","imageLink","fetch","method","headers","body","JSON","stringify","res","json","idToken","sessionStorage","setItem","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { storage } from '../../Firebase/index';\r\n\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst aUrl = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\r\n\r\nconst SignUp = (props) => {\r\n    const [handle, setHandle] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [confirm, setConfirm] = useState('');\r\n    const [errors, setErrors] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [url, setUrl] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const handleChange = e => {\r\n        if (e.target.files[0]) {\r\n            setImage(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n  const handleUpload = () => {\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => {\r\n                const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );\r\n                setProgress(progress);\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storage\r\n                .ref(\"images\")\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    setUrl(url);\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    const submit = () => {\r\n        const data = {\r\n            email,\r\n            password: pass,\r\n            confirmPassword: confirm,\r\n            userHandle: handle,\r\n            imageLink: url\r\n        };\r\n        console.log(data);\r\n        fetch(proxyUrl + aUrl + 'signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n                \"Accept\": \"*/*\",\r\n                \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                \"Connection\": \"keep-alive\",\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.idToken) {\r\n                    sessionStorage.setItem('token', data.idToken);\r\n                }\r\n                // handle\r\n                else if(data.handle) {\r\n                    setErrors(data.handle);\r\n                }\r\n                // error\r\n                else if(data.error) {\r\n                    setErrors(data.error);\r\n                }\r\n                // confirmPassword\r\n                else if(data.confirmPassword) {\r\n                    setErrors(data.confirmPassword);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={handle} placeholder=\"User Handle\" onChange={e => setHandle(e.target.value)} />\r\n            <input value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} />\r\n            <input value={pass} placeholder=\"Password\" onChange={e => setPass(e.target.value)} type=\"password\" />\r\n            <input value={confirm} placeholder=\"Confirm Password\" onChange={e => setConfirm(e.target.value)} type=\"password\" />\r\n            <button onClick={submit}>Sign Up</button>\r\n            <div>\r\n                <progress value={progress} max=\"100\" />\r\n                <br />\r\n                <br />\r\n                <input type=\"file\" onChange={handleChange} />\r\n                <button onClick={handleUpload}>Upload</button>\r\n                <br />\r\n                {url}\r\n                <br />\r\n                <img src={url || \"http://via.placeholder.com/300\"} alt=\"firebase-image\" />\r\n            </div>\r\n            {errors}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}