{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\project-share\\\\src\\\\Components\\\\Posts\\\\Comments.js\";\nimport react from 'react';\nimport Loading from '../Loading/Loading';\n\nclass Commenting extends React.Component {\n  constructor(props) {\n    super(props);\n    state = {\n      postData: {\n        id: this.props.id\n      },\n      comments: null,\n      comment: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(proxyUrl + url + 'getComment', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"PostmanRuntime/7.26.5\",\n        \"Accept\": \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Connection\": \"keep-alive\"\n      },\n      body: JSON.stringify(postData)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      this.setState({\n        comments: data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.comment,\n      placeholder: \"Comment but remeber you must be logged in for it to be submit\",\n      onChange: e => this.setState({\n        comment: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Comment\"));\n  }\n\n}\n\n;\nexport default Commenting;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/project-share/src/Components/Posts/Comments.js"],"names":["react","Loading","Commenting","React","Component","constructor","props","state","postData","id","comments","comment","componentDidMount","fetch","proxyUrl","url","method","headers","body","JSON","stringify","then","res","json","data","console","log","setState","catch","err","render","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,UAAN,SAAyBC,KAAK,CAACC,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,KAAK,GAAG;AACJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWG;AADT,OADN;AAIJC,MAAAA,QAAQ,EAAE,IAJN;AAKJC,MAAAA,OAAO,EAAE;AALL,KAAR;AAOH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAACC,QAAQ,GAAGC,GAAX,GAAiB,YAAlB,EAAgC;AACjCC,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,sBAAc,uBAFT;AAGL,kBAAU,KAHL;AAIL,2BAAmB,mBAJd;AAKL,sBAAc;AALT,OAFwB;AASjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,QAAf;AAT2B,KAAhC,CAAL,CAWCa,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYMG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AACVjB,QAAAA,QAAQ,EAAEc;AADA,OAAd;AAGH,KAjBD,EAkBCI,KAlBD,CAkBOC,GAAG,IAAI;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,KApBD;AAqBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AACI,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWI,OADtB;AAEI,MAAA,WAAW,EAAC,+DAFhB;AAGI,MAAA,QAAQ,EAAEoB,CAAC,IAAI,KAAKJ,QAAL,CAAc;AAAEhB,QAAAA,OAAO,EAAEoB,CAAC,CAACC,MAAF,CAASC;AAApB,OAAd,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ,CADJ;AAaH;;AAlDoC;;AAmDxC;AAED,eAAe/B,UAAf","sourcesContent":["import react from 'react'\r\nimport Loading from '../Loading/Loading';\r\n\r\nclass Commenting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        state = {\r\n            postData: {\r\n                id: this.props.id\r\n            },\r\n            comments: null,\r\n            comment: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(proxyUrl + url + 'getComment', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n                \"Accept\": \"*/*\",\r\n                \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                \"Connection\": \"keep-alive\"\r\n            },\r\n            body: JSON.stringify(postData)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.setState({\r\n                comments: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    \r\n                }\r\n                <input\r\n                    value={this.state.comment}\r\n                    placeholder=\"Comment but remeber you must be logged in for it to be submit\"\r\n                    onChange={e => this.setState({ comment: e.target.value })}\r\n                />\r\n                <button>Comment</button>\r\n            </div>            \r\n        )\r\n    }\r\n};\r\n\r\nexport default Commenting;"]},"metadata":{},"sourceType":"module"}