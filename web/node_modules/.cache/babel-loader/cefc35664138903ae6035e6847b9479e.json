{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\web\\\\src\\\\Components\\\\Posts\\\\Posts.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Fetch } from '../../Tools';\nimport Commenting from './Comments';\n\nconst Posts = props => {\n  const [showComment, setComments] = useState(false);\n  const [liked, setLiked] = useState(null);\n  const [likes, setLikes] = useState(props.likes);\n  const [likesButton, setButton] = useState( /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setLiked(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Like\"));\n  let comments = null;\n\n  if (showComment) {\n    comments = /*#__PURE__*/React.createElement(Commenting, {\n      id: props.id,\n      token: props.token,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (liked == null) {\n      setButton( /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => setLiked(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, \"Like\"));\n    }\n\n    if (liked == true) {\n      like();\n      setButton( /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => setLiked(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \"Unlike\"));\n    }\n\n    if (liked == false) {\n      unlike();\n      setButton( /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => setLiked(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, \"Like\"));\n    }\n\n    if (sessionStorage.getItem(props.id)) {\n      setButton( /*#__PURE__*/React.createElement(\"button\", {\n        disabled: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, \"Like\"));\n    }\n  }, [liked]);\n\n  const like = () => {\n    const scoped = async () => {\n      const res = await Fetch(`\n                mutation {\n  likePost(id:\"5fb5079412022c27b869aabb\", current_like:2)\n} \n            `);\n      console.log(res);\n    };\n\n    scoped();\n  };\n\n  const unlike = () => {\n    const scoped = async () => {\n      const res = await Fetch(`\n            `);\n    };\n\n    scoped();\n    likes = props.likes + 1 - 1;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: props.id,\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Category: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://localhost:3000/category/${props.category}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 52\n    }\n  }, props.category)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Author: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://localhost:3000/user/${props.author}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 48\n    }\n  }, props.author)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, props.children), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-likes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, likesButton, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 52\n    }\n  }, likes)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post-comment-button\",\n    onClick: () => setComments(!showComment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Comments\"), comments);\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/web/src/Components/Posts/Posts.js"],"names":["React","useEffect","useState","Fetch","Commenting","Posts","props","showComment","setComments","liked","setLiked","likes","setLikes","likesButton","setButton","comments","id","token","like","unlike","sessionStorage","getItem","scoped","res","console","log","title","category","author","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Fetch } from '../../Tools';\r\nimport Commenting from './Comments';\r\n\r\nconst Posts = (props) => {\r\n    const [showComment, setComments] = useState(false);\r\n    const [liked, setLiked] = useState(null);\r\n    const [likes, setLikes] = useState(props.likes);\r\n    const [likesButton, setButton] = useState((\r\n        <button onClick={() => setLiked(true)}>Like</button>\r\n    ));\r\n\r\n    let comments = null;\r\n\r\n    if (showComment) {\r\n        comments = (\r\n            <Commenting id={props.id} token={props.token} />\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (liked == null) {\r\n            setButton((\r\n                <button onClick={() => setLiked(true)}>Like</button>\r\n            ));\r\n        }\r\n        if (liked == true) {\r\n            like();\r\n            setButton((\r\n                <button onClick={() => setLiked(false)}>Unlike</button>\r\n            ))\r\n        }\r\n        if (liked == false) {\r\n            unlike();\r\n            setButton((\r\n                <button onClick={() => setLiked(true)}>Like</button>\r\n            ));\r\n        }\r\n        if(sessionStorage.getItem(props.id)) {\r\n            setButton((\r\n                <button disabled=\"true\">Like</button> \r\n            ))\r\n        }\r\n    }, [liked])\r\n\r\n    const like = () => {\r\n        const scoped = async () => {\r\n            const res = await Fetch(`\r\n                mutation {\r\n  likePost(id:\"5fb5079412022c27b869aabb\", current_like:2)\r\n} \r\n            `);\r\n            console.log(res);\r\n        };\r\n\r\n        scoped();\r\n    }\r\n\r\n    const unlike = () => {\r\n        const scoped = async () => {\r\n            const res = await Fetch(`\r\n            `)\r\n        }\r\n\r\n        scoped();\r\n        likes = props.likes + 1 - 1;\r\n    }\r\n\r\n    return (\r\n        <div key={props.id} className=\"post-content\">\r\n            <p className=\"post-title\">{props.title}</p>\r\n            <p className=\"post-category\">Category: <a href={`http://localhost:3000/category/${props.category}`}>{props.category}</a></p>\r\n            <p className=\"post-author\">Author: <a href={`http://localhost:3000/user/${props.author}`}>{props.author}</a></p>\r\n            <p className=\"post-body\">{props.children}</p>\r\n            <p className=\"post-likes\">{likesButton}<span>{likes}</span></p>\r\n            <button className=\"post-comment-button\" onClick={() => setComments(!showComment)}>Comments</button>\r\n            { comments}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}