{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\web\\\\src\\\\Components\\\\Posts\\\\Comments.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Fetch } from '../../Tools';\nconst Commenting = React.memo(props => {\n  const [comments, setComments] = useState(null);\n  const [comment, setComment] = useState('');\n  const [display, setDisplay] = useState(null);\n  const [but, setBut] = useState(null);\n  useEffect(() => {\n    const scoped = async () => {\n      const res = await Fetch(`\n                {\n                    getComments(id:\"${props.id}\") {\n                        id\n                        body\n                        author\n                    }\n                }\n            `);\n      setComments(res.getComments);\n    };\n\n    scoped();\n  }, []);\n\n  const changeBut = () => {\n    setBut(null);\n  };\n\n  const idToken = sessionStorage.getItem('token');\n\n  let loadAll = () => {\n    changeBut();\n  };\n\n  const post = () => {\n    if (idToken == null | undefined) {\n      alert('Not Logged In');\n    } else {\n      const scoped = async () => {\n        const res = await Fetch(`\n                    mutation {\n\n                    } \n                `);\n      };\n\n      scoped();\n    }\n  };\n\n  const handleChange = e => {\n    if (e.key == \"Enter\") {\n      post();\n    }\n  };\n\n  let input = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    onKeyPress: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Comment\"));\n\n  if (idToken == null) {\n    input = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      disabled: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Comment\"));\n  }\n\n  if (comments == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, input);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, display, but, comments);\n});\nexport default Commenting;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/web/src/Components/Posts/Comments.js"],"names":["React","useEffect","useState","Fetch","Commenting","memo","props","comments","setComments","comment","setComment","display","setDisplay","but","setBut","scoped","res","id","getComments","changeBut","idToken","sessionStorage","getItem","loadAll","post","undefined","alert","handleChange","e","key","input","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,aAAtB;AAEA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,IAAN,CAAYC,KAAD,IAAW;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,MAAM,GAAG,YAAY;AACvB,YAAMC,GAAG,GAAG,MAAMb,KAAK,CAAE;;sCAECG,KAAK,CAACW,EAAG;;;;;;aAFZ,CAAvB;AASAT,MAAAA,WAAW,CAACQ,GAAG,CAACE,WAAL,CAAX;AACH,KAXD;;AAaAH,IAAAA,MAAM;AACT,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMI,SAAS,GAAG,MAAM;AACpBL,IAAAA,MAAM,CAAC,IAAD,CAAN;AACH,GAFD;;AAIA,QAAMM,OAAO,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAhB;;AAEA,MAAIC,OAAO,GAAG,MAAM;AAChBJ,IAAAA,SAAS;AACZ,GAFD;;AAIA,QAAMK,IAAI,GAAG,MAAM;AACf,QAAGJ,OAAO,IAAI,IAAX,GAAkBK,SAArB,EAAgC;AAC5BC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH,KAFD,MAEO;AACH,YAAMX,MAAM,GAAG,YAAY;AACvB,cAAMC,GAAG,GAAG,MAAMb,KAAK,CAAE;;;;iBAAF,CAAvB;AAKH,OAND;;AAQAY,MAAAA,MAAM;AACT;AACJ,GAdD;;AAgBA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAGA,CAAC,CAACC,GAAF,IAAS,OAAZ,EAAqB;AACjBL,MAAAA,IAAI;AACP;AACJ,GAJD;;AAMA,MAAIM,KAAK,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAErB,OADX;AAEI,IAAA,QAAQ,EAAEmB,CAAC,IAAIlB,UAAU,CAACkB,CAAC,CAACG,MAAF,CAASC,KAAV,CAF7B;AAGI,IAAA,UAAU,EAAEL,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,OAAO,EAAEH,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CADJ;;AAWA,MAAGJ,OAAO,IAAI,IAAd,EAAoB;AAChBU,IAAAA,KAAK,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,QAAQ,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,QAAQ,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ;AAMH;;AAED,MAAGvB,QAAQ,IAAI,IAAf,EAAqB;AACjB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMuB,KADN,CADJ;AAKH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMnB,OADN,EAEME,GAFN,EAGMN,QAHN,CADJ;AAOH,CA1FkB,CAAnB;AA4FA,eAAeH,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Fetch } from '../../Tools';\r\n\r\nconst Commenting = React.memo((props) => {\r\n    const [comments, setComments] = useState(null);\r\n    const [comment, setComment] = useState('');\r\n    const [display, setDisplay] = useState(null);\r\n    const [but, setBut] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const scoped = async () => {\r\n            const res = await Fetch(`\r\n                {\r\n                    getComments(id:\"${props.id}\") {\r\n                        id\r\n                        body\r\n                        author\r\n                    }\r\n                }\r\n            `);\r\n            setComments(res.getComments);\r\n        }\r\n\r\n        scoped();\r\n    }, [])\r\n\r\n    const changeBut = () => {\r\n        setBut(null);\r\n    }\r\n\r\n    const idToken = sessionStorage.getItem('token');\r\n\r\n    let loadAll = () => {\r\n        changeBut();\r\n    }\r\n\r\n    const post = () => {\r\n        if(idToken == null | undefined) {\r\n            alert('Not Logged In')\r\n        } else {\r\n            const scoped = async () => {\r\n                const res = await Fetch(`\r\n                    mutation {\r\n\r\n                    } \r\n                `)\r\n            }\r\n\r\n            scoped();\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if(e.key == \"Enter\") {\r\n            post();\r\n        }\r\n    }\r\n\r\n    let input = (\r\n        <div>\r\n            <input \r\n                value={comment}\r\n                onChange={e => setComment(e.target.value)}\r\n                onKeyPress={handleChange}\r\n            />\r\n            <button onClick={post}>Comment</button>\r\n        </div>\r\n    );\r\n\r\n    if(idToken == null) {\r\n        input = (\r\n            <div>\r\n                <input disabled=\"true\" />\r\n                <button disabled=\"true\">Comment</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(comments == null) {\r\n        return (\r\n            <div>\r\n                { input }\r\n            </div>\r\n        )\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            { display }\r\n            { but }\r\n            { comments }\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Commenting;"]},"metadata":{},"sourceType":"module"}