{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\project-share\\\\src\\\\Components\\\\Posts\\\\Comments.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CommentComponent from './Commenting';\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\n\nconst Commenting = props => {\n  const [postData, setPost] = useState({\n    id: props.id\n  });\n  const [comments, setComments] = useState(null);\n  const [comment, setComment] = useState('');\n  const token = useSelector(state => state.idToken);\n  useEffect(() => {\n    fetch(proxyUrl + url + 'getComment', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"PostmanRuntime/7.26.5\",\n        \"Accept\": \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Connection\": \"keep-alive\"\n      },\n      body: JSON.stringify(postData)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setComments(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, comments ? this.state.posts.map(post => /*#__PURE__*/React.createElement(Post, {\n    title: post.title,\n    author: post.author,\n    category: post.category,\n    likes: post.likes,\n    id: post.postId,\n    createdAt: post.createdAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, post.body)) : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Comment anything but make sure you are logged in!\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Comment\"));\n};\n\nexport default Commenting;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/project-share/src/Components/Posts/Comments.js"],"names":["React","useEffect","useState","useSelector","CommentComponent","proxyUrl","url","Commenting","props","postData","setPost","id","comments","setComments","comment","setComment","token","state","idToken","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","catch","err","posts","map","post","title","author","category","likes","postId","createdAt","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,GAAG,GAAG,iEAAZ;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBR,QAAQ,CAAC;AACjCS,IAAAA,EAAE,EAAEH,KAAK,CAACG;AADuB,GAAD,CAApC;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMc,KAAK,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAAzB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,KAAK,CAACd,QAAQ,GAAGC,GAAX,GAAiB,YAAlB,EAAgC;AACjCc,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,sBAAc,uBAFT;AAGL,kBAAU,KAHL;AAIL,2BAAmB,mBAJd;AAKL,sBAAc;AALT,OAFwB;AASjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,QAAf;AAT2B,KAAhC,CAAL,CAWCgB,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYMG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAf,MAAAA,WAAW,CAACe,IAAD,CAAX;AACH,KAfD,EAgBCG,KAhBD,CAgBOC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAlBD;AAmBH,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQpB,QAAQ,GACR,KAAKK,KAAL,CAAWgB,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,iBACrB,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEA,IAAI,CAACC,KADhB;AAEI,IAAA,MAAM,EAAED,IAAI,CAACE,MAFjB;AAGI,IAAA,QAAQ,EAAEF,IAAI,CAACG,QAHnB;AAII,IAAA,KAAK,EAAEH,IAAI,CAACI,KAJhB;AAKI,IAAA,EAAE,EAAEJ,IAAI,CAACK,MALb;AAMI,IAAA,SAAS,EAAEL,IAAI,CAACM,SANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKN,IAAI,CAACb,IARV,CADJ,CADQ,gBAaN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfV,eAiBI;AACI,IAAA,WAAW,EAAC,mDADhB;AAEI,IAAA,KAAK,EAAER,OAFX;AAGI,IAAA,QAAQ,EAAE4B,CAAC,IAAI3B,UAAU,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAtBJ,CADJ;AA0BH,CAzDD;;AA2DA,eAAerC,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CommentComponent from './Commenting';\r\n\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\r\n\r\nconst Commenting = props => {\r\n    const [postData, setPost] = useState({\r\n        id: props.id,\r\n    })\r\n    const [comments, setComments] = useState(null);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const token = useSelector(state => state.idToken);\r\n\r\n    useEffect(() => {\r\n        fetch(proxyUrl + url + 'getComment', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n                \"Accept\": \"*/*\",\r\n                \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                \"Connection\": \"keep-alive\"\r\n            },\r\n            body: JSON.stringify(postData)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            setComments(data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                comments ? \r\n                this.state.posts.map(post => \r\n                    <Post\r\n                        title={post.title} \r\n                        author={post.author} \r\n                        category={post.category}\r\n                        likes={post.likes}\r\n                        id={post.postId}\r\n                        createdAt={post.createdAt}\r\n                    >\r\n                        {post.body}\r\n                    </Post>    \r\n                )\r\n                : <Loading />\r\n                }\r\n            <input \r\n                placeholder='Comment anything but make sure you are logged in!'\r\n                value={comment}\r\n                onChange={e => setComment(e.target.value)}\r\n            />\r\n            <button>Comment</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Commenting;"]},"metadata":{},"sourceType":"module"}