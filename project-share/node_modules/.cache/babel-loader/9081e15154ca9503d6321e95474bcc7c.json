{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\project-share\\\\src\\\\Components\\\\Posts\\\\Comments.js\";\nimport React, { useEffect, useState } from 'react';\nimport CommentComponent from './Commenting';\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\n\nconst Commenting = props => {\n  const [postData, setPost] = useState({\n    id: props.id\n  });\n  const [comments, setComments] = useState(null);\n  useEffect(() => {\n    fetch(proxyUrl + url + 'getComment', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"PostmanRuntime/7.26.5\",\n        \"Accept\": \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Connection\": \"keep-alive\"\n      },\n      body: JSON.stringify(postData)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setComments(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, comments ? comments.map(c => /*#__PURE__*/React.createElement(\"li\", {\n    key: c.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 35\n    }\n  }, c.author, c.body)) : null, /*#__PURE__*/React.createElement(\"input\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Commenting;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/project-share/src/Components/Posts/Comments.js"],"names":["React","useEffect","useState","CommentComponent","proxyUrl","url","Commenting","props","postData","setPost","id","comments","setComments","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","catch","err","map","c","author"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,GAAG,GAAG,iEAAZ;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBP,QAAQ,CAAC;AACjCQ,IAAAA,EAAE,EAAEH,KAAK,CAACG;AADuB,GAAD,CAApC;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAACT,QAAQ,GAAGC,GAAX,GAAiB,YAAlB,EAAgC;AACjCS,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,sBAAc,uBAFT;AAGL,kBAAU,KAHL;AAIL,2BAAmB,mBAJd;AAKL,sBAAc;AALT,OAFwB;AASjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AAT2B,KAAhC,CAAL,CAWCW,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYMG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAV,MAAAA,WAAW,CAACU,IAAD,CAAX;AACH,KAfD,EAgBCG,KAhBD,CAgBOC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAlBD;AAmBH,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQf,QAAQ,GACRA,QAAQ,CAACgB,GAAT,CAAaC,CAAC,iBAAI;AAAI,IAAA,GAAG,EAAEA,CAAC,CAAClB,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBkB,CAAC,CAACC,MAAlB,EAA0BD,CAAC,CAACZ,IAA5B,CAAlB,CADQ,GAER,IAJR,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH,CAtCD;;AAwCA,eAAeV,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CommentComponent from './Commenting';\r\n\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\r\n\r\nconst Commenting = props => {\r\n    const [postData, setPost] = useState({\r\n        id: props.id,\r\n    })\r\n    const [comments, setComments] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(proxyUrl + url + 'getComment', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n                \"Accept\": \"*/*\",\r\n                \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                \"Connection\": \"keep-alive\"\r\n            },\r\n            body: JSON.stringify(postData)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            setComments(data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            { \r\n                comments ?\r\n                comments.map(c => <li key={c.id}>{c.author}{c.body}</li>) :\r\n                null\r\n            }\r\n            <input />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Commenting;"]},"metadata":{},"sourceType":"module"}