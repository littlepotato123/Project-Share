{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\project-share\\\\src\\\\Pages\\\\Authentication\\\\Login.js\";\nimport React, { useState } from 'react';\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\n\nconst Login = props => {\n  const [email, setEmail] = useState(null);\n  const [pass, setPass] = useState(null);\n  const [error, setError] = useState(null);\n\n  const submit = () => {\n    fetch(proxyUrl + url + 'login', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"PostmanRuntime/7.26.5\",\n        \"Accept\": \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Connection\": \"keep-alive\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: pass\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.idToken) {\n        sessionStorage.setItem('token', data.idToken);\n      } else if (data.general) {\n        setError(data.general);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    placeholder: \"Email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: pass,\n    placeholder: \"Password\",\n    onChange: e => setPass(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Login\"), error);\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/project-share/src/Pages/Authentication/Login.js"],"names":["React","useState","proxyUrl","url","Login","props","email","setEmail","pass","setPass","error","setError","submit","fetch","method","headers","body","JSON","stringify","password","then","res","json","data","idToken","sessionStorage","setItem","general","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,GAAG,GAAG,iEAAZ;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMW,MAAM,GAAG,MAAM;AACjBC,IAAAA,KAAK,CAACX,QAAQ,GAAGC,GAAX,GAAiB,OAAlB,EAA2B;AAC5BW,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,sBAAc,uBAFT;AAGL,kBAAU,KAHL;AAIL,2BAAmB,mBAJd;AAKL,sBAAc;AALT,OAFmB;AAS5BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBZ,QAAAA,KAAK,EAAEA,KADU;AAEjBa,QAAAA,QAAQ,EAAEX;AAFO,OAAf;AATsB,KAA3B,CAAL,CAcKY,IAdL,CAcUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAdjB,EAeKF,IAfL,CAeUG,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,OAAT,EAAkB;AACdC,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCH,IAAI,CAACC,OAArC;AACH,OAFD,MAEO,IAAID,IAAI,CAACI,OAAT,EAAkB;AACrBhB,QAAAA,QAAQ,CAACY,IAAI,CAACI,OAAN,CAAR;AACH;AACJ,KArBL;AAsBH,GAvBD;;AAyBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAErB,KAAd;AAAqB,IAAA,WAAW,EAAC,OAAjC;AAAyC,IAAA,QAAQ,EAAEsB,CAAC,IAAIrB,QAAQ,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,KAAK,EAAEtB,IAA9B;AAAoC,IAAA,WAAW,EAAC,UAAhD;AAA2D,IAAA,QAAQ,EAAEoB,CAAC,IAAInB,OAAO,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,OAAO,EAAElB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAIKF,KAJL,CADJ;AAQH,CAtCD;;AAwCA,eAAeN,KAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState(null);\r\n    const [pass, setPass] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const submit = () => {\r\n        fetch(proxyUrl + url + 'login', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n                \"Accept\": \"*/*\",\r\n                \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                \"Connection\": \"keep-alive\"\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: pass\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.idToken) {\r\n                    sessionStorage.setItem('token', data.idToken)\r\n                } else if (data.general) {\r\n                    setError(data.general);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} />\r\n            <input type=\"password\" value={pass} placeholder=\"Password\" onChange={e => setPass(e.target.value)} />\r\n            <button onClick={submit}>Login</button>\r\n            {error}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}