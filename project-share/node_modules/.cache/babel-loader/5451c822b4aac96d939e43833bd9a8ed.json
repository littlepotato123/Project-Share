{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project Share\\\\project-share\\\\src\\\\Components\\\\Posts\\\\Posts.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Commenting from './Comments';\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\n\nconst Posts = props => {\n  const [showComment, setComments] = useState(false);\n  const [liked, setLiked] = useState(false);\n  const idToken = useSelector(state => state.idToken);\n  let comments = null;\n  let likes = parseInt(props.likes);\n\n  if (showComment) {\n    comments = /*#__PURE__*/React.createElement(Commenting, {\n      id: props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (liked) {\n      likes += 1;\n      fetch(proxyUrl + url + 'likePost', {\n        method: 'POST',\n        body: JSON.stringify({\n          \"likes\": 0,\n          \"body\": \"This is saanvi's body\",\n          \"author\": \"Akshat\",\n          \"category\": \"Brown Bois\",\n          \"createdAt\": \"September 22, 2020 at 6:13:43 PM UTC-4\",\n          \"title\": \"om's Title\",\n          \"id\": \"yHwMR3PBD6rhKfqIPDw5\"\n        })\n      }).then(res => res.json()).then(data => console.log(data));\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: props.id,\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Category: \", props.category), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Author: \", props.author), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, props.children), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-likes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setLiked(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 39\n    }\n  }, \"Likes\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 92\n    }\n  }, likes)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post-comment-button\",\n    onClick: () => setComments(!showComment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Comments\"), comments);\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project Share/project-share/src/Components/Posts/Posts.js"],"names":["React","useEffect","useState","useSelector","Commenting","proxyUrl","url","Posts","props","showComment","setComments","liked","setLiked","idToken","state","comments","likes","parseInt","id","fetch","method","body","JSON","stringify","then","res","json","data","console","log","title","category","author","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,GAAG,GAAG,iEAAZ;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM,CAACC,WAAD,EAAcC,WAAd,IAA6BR,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMW,OAAO,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AAEA,MAAIE,QAAQ,GAAG,IAAf;AAEA,MAAIC,KAAK,GAAGC,QAAQ,CAACT,KAAK,CAACQ,KAAP,CAApB;;AAEA,MAAGP,WAAH,EAAgB;AACZM,IAAAA,QAAQ,gBACJ,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAEP,KAAK,CAACU,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,KAAH,EAAU;AACNK,MAAAA,KAAK,IAAI,CAAT;AACAG,MAAAA,KAAK,CAACd,QAAQ,GAAGC,GAAX,GAAiB,UAAlB,EAA8B;AAC/Bc,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrB,mBAAS,CADY;AAErB,kBAAQ,uBAFa;AAGrB,oBAAU,QAHW;AAIrB,sBAAY,YAJS;AAKrB,uBAAa,wCALQ;AAMrB,mBAAS,YANY;AAOrB,gBAAM;AAPe,SAAf;AAFyB,OAA9B,CAAL,CAYCC,IAZD,CAYMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZb,EAaCF,IAbD,CAaMG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAbd;AAcH;AACJ,GAlBQ,CAAT;AAoBA,sBACI;AAAK,IAAA,GAAG,EAAEnB,KAAK,CAACU,EAAhB;AAAoB,IAAA,SAAS,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BV,KAAK,CAACsB,KAAlC,CADJ,eAEI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyCtB,KAAK,CAACuB,QAA/C,CAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCvB,KAAK,CAACwB,MAA3C,CAHJ,eAII;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BxB,KAAK,CAACyB,QAAjC,CAJJ,eAKI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B;AAAQ,IAAA,OAAO,EAAE,MAAMrB,QAAQ,CAAC,IAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA1B,eAA+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQI,KAAR,CAA/E,CALJ,eAOI;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAwC,IAAA,OAAO,EAAE,MAAMN,WAAW,CAAC,CAACD,WAAF,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQMM,QARN,CADJ;AAYH,CAhDD;;AAkDA,eAAeR,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport Commenting from './Comments';\r\n\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\r\nconst Posts = (props) => {\r\n    const [showComment, setComments] = useState(false);\r\n    const [liked, setLiked] = useState(false);\r\n\r\n    const idToken = useSelector(state => state.idToken);\r\n\r\n    let comments = null;\r\n\r\n    let likes = parseInt(props.likes)\r\n\r\n    if(showComment) {\r\n        comments = (\r\n            <Commenting id={props.id} />\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(liked) {\r\n            likes += 1;\r\n            fetch(proxyUrl + url + 'likePost', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                \"likes\": 0,\r\n                \"body\": \"This is saanvi's body\",\r\n                \"author\": \"Akshat\",\r\n                \"category\": \"Brown Bois\",\r\n                \"createdAt\": \"September 22, 2020 at 6:13:43 PM UTC-4\",\r\n                \"title\": \"om's Title\",\r\n                \"id\": \"yHwMR3PBD6rhKfqIPDw5\"\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n        }\r\n    }) \r\n\r\n    return (\r\n        <div key={props.id} className=\"post-content\">\r\n            <p className=\"post-title\">{ props.title }</p>\r\n            <p className=\"post-category\">Category: { props.category }</p>\r\n            <p className=\"post-author\">Author: { props.author }</p>\r\n            <p className=\"post-body\">{ props.children }</p>\r\n            <p className=\"post-likes\"><button onClick={() => setLiked(true)}>Likes</button><span>{ likes }</span></p>\r\n            {/* Add Commenting */}\r\n            <button className=\"post-comment-button\" onClick={() => setComments(!showComment)}>Comments</button>\r\n            { comments }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}