{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project-Share\\\\project-share\\\\src\\\\Pages\\\\User Page\\\\User.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Loading from '../../Components/Loading/Loading';\nimport Post from '../../Components/Posts/Posts';\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\n\nconst User = () => {\n  const [user, setUser] = useState({});\n  const [supporters, setSupporters] = useState(null);\n  const [posts, setPosts] = useState(null);\n  const [share, setShare] = useState(null);\n  const [supported, setSupported] = useState(false);\n\n  const unsupport = () => {\n    setSupported(!supported); // fetch(proxyUrl + url + 'unfollowUser', {\n    //     method: 'POST',\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"User-Agent\": \"PostmanRuntime/7.26.5\",\n    //         \"Accept\": \"*/*\",\n    //         \"Accept-Encoding\": \"gzip, deflate, br\",\n    //         \"Connection\": \"keep-alive\"\n    //     },\n    //     body: JSON.stringify({\n    //     })\n    // })\n  };\n\n  const support = () => {\n    setSupported(!supported); // fetch(proxyUrl + url + 'followUser', {\n    //     method: 'POST',\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"User-Agent\": \"PostmanRuntime/7.26.5\",\n    //         \"Accept\": \"*/*\",\n    //         \"Accept-Encoding\": \"gzip, deflate, br\",\n    //         \"Connection\": \"keep-alive\"\n    //     },\n    //     body: JSON.stringify({\n    //     })\n    // })\n\n    console.log(user.createdAt);\n    console.log(user.handle);\n    console.log(user.userId);\n    console.log(user.email);\n    console.log(user.supporters);\n  };\n\n  let supportButton = /*#__PURE__*/React.createElement(\"button\", {\n    onClick: support,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Support\");\n  const {\n    userHandle\n  } = useParams();\n  const history = useHistory();\n\n  if (supported) {\n    supportButton = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: unsupport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Unsupport\");\n  } else {\n    supportButton = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: support,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Support\");\n  }\n\n  useEffect(() => {\n    fetch(proxyUrl + url + 'getUser', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"PostmanRuntime/7.26.5\",\n        \"Accept\": \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Connection\": \"keep-alive\"\n      },\n      body: JSON.stringify({\n        userHandle: userHandle\n      })\n    }).then(res => res.json()).then(data => {\n      if (typeof data == 'object') {\n        if (Object.keys(data).length === 0) {\n          history.push('/wronguser');\n        } else {\n          setUser(data.user);\n          setShare(`localhost:3000/user/${data.user.handle}`);\n          setSupporters(data.user.supporters);\n        }\n      }\n    });\n  }, []);\n\n  const loadPost = () => {\n    fetch(proxyUrl + url + 'getUserPost', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"PostmanRuntime/7.26.5\",\n        \"Accept\": \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Connection\": \"keep-alive\"\n      },\n      body: JSON.stringify({\n        user: user.handle\n      })\n    }).then(res => res.json()).then(data => setPosts(data));\n  };\n\n  let userInfo = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, user.handle, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 27\n    }\n  }), supporters, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 26\n    }\n  }), supportButton, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: share,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Copy Share Link\")), user.bio, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"1000px\",\n    src: user.url ? user.url : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: loadPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Load Posts\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, posts ? posts.map(post => /*#__PURE__*/React.createElement(Post, {\n    title: post.title,\n    author: post.author,\n    category: post.category,\n    likes: post.likes,\n    id: post.postId,\n    createdAt: post.createdAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, post.body)) : null));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, Object.keys(user).length === 0 ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 48\n    }\n  }) : userInfo);\n};\n\nexport default User;","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project-Share/project-share/src/Pages/User Page/User.js"],"names":["React","useEffect","useState","useHistory","useParams","CopyToClipboard","Loading","Post","proxyUrl","url","User","user","setUser","supporters","setSupporters","posts","setPosts","share","setShare","supported","setSupported","unsupport","support","console","log","createdAt","handle","userId","email","supportButton","userHandle","history","fetch","method","headers","body","JSON","stringify","then","res","json","data","Object","keys","length","push","loadPost","userInfo","bio","map","post","title","author","category","likes","postId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from 'react-router-dom';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Loading from '../../Components/Loading/Loading';\r\nimport Post from '../../Components/Posts/Posts';\r\n\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\r\n\r\nconst User = () => {\r\n    const [user, setUser] = useState({});\r\n    const [supporters, setSupporters] = useState(null);\r\n    const [posts, setPosts] = useState(null);\r\n    const [share, setShare] = useState(null);\r\n\r\n    const [supported, setSupported] = useState(false);\r\n\r\n    const unsupport = () => {\r\n        setSupported(!supported);\r\n        // fetch(proxyUrl + url + 'unfollowUser', {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n        //         \"Accept\": \"*/*\",\r\n        //         \"Accept-Encoding\": \"gzip, deflate, br\",\r\n        //         \"Connection\": \"keep-alive\"\r\n        //     },\r\n        //     body: JSON.stringify({\r\n\r\n        //     })\r\n        // })\r\n    }\r\n\r\n    const support = () => {\r\n        setSupported(!supported);\r\n        // fetch(proxyUrl + url + 'followUser', {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n        //         \"Accept\": \"*/*\",\r\n        //         \"Accept-Encoding\": \"gzip, deflate, br\",\r\n        //         \"Connection\": \"keep-alive\"\r\n        //     },\r\n        //     body: JSON.stringify({\r\n\r\n        //     })\r\n        // })\r\n        console.log(user.createdAt)\r\n        console.log(user.handle);\r\n        console.log(user.userId)\r\n        console.log(user.email)\r\n        console.log(user.supporters);\r\n    }\r\n\r\n    let supportButton = (\r\n        <button onClick={support}>Support</button>\r\n    )\r\n\r\n    const { userHandle } = useParams();\r\n    \r\n    const history = useHistory();\r\n\r\n    if(supported) {\r\n        supportButton = (\r\n            <button onClick={unsupport}>Unsupport</button>\r\n        );\r\n    } else {\r\n        supportButton = (\r\n            <button onClick={support}>Support</button>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(proxyUrl + url + 'getUser', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n                \"Accept\": \"*/*\",\r\n                \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                \"Connection\": \"keep-alive\"\r\n            },\r\n            body: JSON.stringify({\r\n                userHandle: userHandle\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(typeof data == 'object') {\r\n                if(Object.keys(data).length === 0) {\r\n                    history.push('/wronguser');\r\n                } else {\r\n                    setUser(data.user);\r\n                    setShare(`localhost:3000/user/${data.user.handle}`)\r\n                    setSupporters(data.user.supporters);\r\n                }\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const loadPost = () => {\r\n        fetch(proxyUrl + url + 'getUserPost', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"User-Agent\": \"PostmanRuntime/7.26.5\",\r\n                \"Accept\": \"*/*\",\r\n                \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                \"Connection\": \"keep-alive\"\r\n            },\r\n            body: JSON.stringify({ user: user.handle })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setPosts(data))\r\n    }\r\n\r\n    let userInfo = (\r\n        <div>\r\n            {user.handle} <br />\r\n            {supporters} <br />\r\n            { supportButton }\r\n            <CopyToClipboard text={share}>\r\n                <button>Copy Share Link</button>\r\n            </CopyToClipboard>\r\n            {user.bio}\r\n            <img width=\"1000px\" src={user.url ? user.url : null} />\r\n            <button onClick={loadPost}>Load Posts</button>\r\n            <div>\r\n                {\r\n                    posts ? \r\n                    posts.map(post => \r\n                        <Post\r\n                            title={post.title} \r\n                            author={post.author} \r\n                            category={post.category}\r\n                            likes={post.likes}\r\n                            id={post.postId}\r\n                            createdAt={post.createdAt}\r\n                        >\r\n                            {post.body}\r\n                        </Post>\r\n                    ) :\r\n                    null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            { Object.keys(user).length === 0 ? <Loading /> : userInfo}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}