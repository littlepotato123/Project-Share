{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sopan\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\Project Share\\\\project-share\\\\src\\\\Pages\\\\Authentication\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\n\nconst SignUp = () => {\n  const [handle, setHandle] = useState('');\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [confirm, setConfirm] = useState('');\n  let errors = null;\n\n  const submit = () => {\n    fetch(proxyUrl + url + 'signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: pass,\n        confirmPassword: confirm,\n        userHandle: handle\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.idToken == null) {}\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: handle,\n    placeholder: \"User Handle\",\n    onChange: e => setHandle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    placeholder: \"Email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: pass,\n    placeholder: \"Password\",\n    onChange: e => setPass(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: confirm,\n    placeholder: \"Confirm Password\",\n    onChange: e => setConfirm(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setIdToken: newToken => {\n      dispatch({\n        type: 'SET_NEW_TOKEN',\n        token: newToken\n      });\n    }\n  };\n};\n\nexport default connect(mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/sopan/OneDrive/Documents/Personal Projects/Project Share/project-share/src/Pages/Authentication/SignUp.js"],"names":["React","useState","connect","proxyUrl","url","SignUp","handle","setHandle","email","setEmail","pass","setPass","confirm","setConfirm","errors","submit","fetch","method","headers","body","JSON","stringify","password","confirmPassword","userHandle","then","res","json","data","idToken","e","target","value","mapDispatchToProps","dispatch","setIdToken","newToken","type","token"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst url = \"https://us-central1-project-share-8df06.cloudfunctions.net/api/\";\r\n\r\nconst SignUp = () => {\r\n    const [handle, setHandle] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [confirm, setConfirm] = useState('');\r\n\r\n    let errors = null;\r\n\r\n    const submit = () => {\r\n        fetch(proxyUrl + url + 'signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: pass,\r\n                confirmPassword: confirm,\r\n                userHandle: handle\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.idToken == null) {\r\n                    \r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={handle} placeholder=\"User Handle\" onChange={e => setHandle(e.target.value)} />\r\n            <input value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} />\r\n            <input value={pass} placeholder=\"Password\" onChange={e => setPass(e.target.value)} />\r\n            <input value={confirm} placeholder=\"Confirm Password\" onChange={e => setConfirm(e.target.value)} />\r\n            <button onClick={submit}>Sign Up</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setIdToken: (newToken) => { dispatch({type: 'SET_NEW_TOKEN', token: newToken}) }\r\n    }\r\n}\r\n\r\nexport default connect(mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}